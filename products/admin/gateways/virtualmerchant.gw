<?php
// Elavon Virtual Merchant...
$gatewayname = "Elavon Virtual Merchant";
$paymenturl = "$ashopsurl/orderform.php";
$postbackurl = "$ashopurl/order.php";
$visibleorderprocessing = "FALSE";
$resultpagessl = "TRUE";
$sendpayoptionid = "TRUE";
$gw_orderid = "invoice";
$gw_amount = "";
$gw_merchantid = "";
$gw_logourl = "";
$gw_vspartner = "";
$gw_pageid = "";
$gw_description = "description";
$gw_returnurl1 = "";
$gw_returnurl2 = "";
$gw_cancel = "";
$gw_basket = "";
$gw_affiliate = "affiliate";
$gw_bgcolor = "";
$gw_bgurl = "";
$gw_firstname = "firstname";
$gw_lastname = "lastname";
$gw_address = "address";
$gw_city = "city";
$gw_zip = "zip";
$gw_state = "state";
$gw_country = "country";
$gw_email = "email";
$gw_phone = "phone";
$gw_shipfirstname = "";
$gw_shiplastname = "";
$gw_shipaddress = "";
$gw_shipcity = "";
$gw_shipzip = "";
$gw_shipstate = "";
$gw_shipcountry = "";

$gw_extrafields = "<input type=\"hidden\" name=\"localprocessing\" value=\"TRUE\">";
$testrequest = "";
$gw_cardtypes = "";
$ccsecuritycode = "TRUE";

$gw_parameters['merchantid'] = "true";
$gw_parameters['secret'] = "true";
$gw_parameters['transactionkey'] = "true";
$gw_parameters['logourl'] = "true";
$gw_parameters['vspartner'] = "false";
$gw_parameters['pageid'] = "false";
$gw_parameters['formfields'] = "true";
$gw_parameters['testmode'] = "true";
$gw_parameters['autodelivery'] = "true";
$gw_parameters['deliverpending'] = "false";
$gw_parameters['gwbgcolor'] = "false";
$gw_parameters['gwbgurl'] = "false";
$gw_parameters['paymentinfo'] = "true";
$gw_parameters['telesign'] = "false";

if ( ! function_exists('authenticate') ) {
	function authenticate($gateway_input, $securityhash, $merchant) {
		if($gateway_input['responsemsg'] && $gateway_input['scode'] == md5($gateway_input['remoteorderid'].$securityhash)) {
			$validate[0] = "VERIFIED";
		} else {
			$validate[0] = "INVALID";
			$validate[1] = "SUSPECT";
		}
		return $validate;
	}
}

if ( ! function_exists('process_payment') ) {
	function process_payment($user, $password, $vspartner, $cardtype, $ccnumber, $seccode, $expdate, $amount, $invoice, $firstname, $lastname, $address, $city, $zip, $state, $country, $phone, $email, $testmode, $description) {
		global $ashopsurl,$ashoppath,$apisignature;
		unset($viaklix_result);
		$amount = number_format($amount,2,'.','');
		if ($seccode) $seccodecheck = "&ssl_cvv2cvc2_indicator=1&ssl_cvv2cvc2=$seccode";
		else $seccodecheck = "&ssl_cvv2cvc2_indicator=0";
		$postfields = "ssl_merchant_id=$user&ssl_pin=$password&ssl_user_id=$apisignature&ssl_amount=$amount&ssl_transaction_type=ccsale&ssl_card_number=$ccnumber&ssl_exp_date=$expdate$seccodecheck&ssl_first_name=".urlencode("$firstname")."&ssl_last_name=".urlencode("$lastname")."&ssl_avs_address=".urlencode($address)."&ssl_city=".urlencode($city)."&ssl_state=$state&ssl_avs_zip=".urlencode($zip)."&ssl_country=$pscountry&ssl_invoice_number=$invoice&ssl_phone=".urlencode($phone)."&ssl_email=$email&ssl_show_form=false&ssl_result_format=ASCII&ssl_customer_code=".urlencode("$firstname $lastname")."&ssl_salestax=0";
		if ($testmode) $postfields .= "&ssl_test_mode=true";
		if (function_exists('curl_version')) {
			$curlversion = curl_version();
			if (strstr($curlversion, "SSL") || (is_array($curlversion) && (strstr($curlversion["ssl_version"], "SSL") || strstr($curlversion["ssl_version"], "NSS")))) {
				$ch = curl_init();
				if (file_exists("$ashoppath/admin/curl.inc.php")) include "$ashoppath/admin/curl.inc.php";
				curl_setopt($ch, CURLOPT_URL,"https://www.myvirtualmerchant.com/VirtualMerchant/process.do");
				curl_setopt($ch, CURLOPT_POST, 1);
				curl_setopt($ch, CURLOPT_REFERER,"$ashopsurl/orderform.php");
				curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, FALSE);
				curl_setopt($ch, CURLOPT_SSL_VERIFYHOST, FALSE);
				curl_setopt($ch, CURLOPT_POSTFIELDS, $postfields);
				curl_setopt($ch, CURLOPT_RETURNTRANSFER,1);
				$viaklix_result=curl_exec ($ch);
				$error = curl_error($ch);
				curl_close ($ch);
			}
		} else $result["ERROR"] = "Server error! Curl functions are missing!";
		$debug = $viaklix_result;
		$viaklix_result = explode("\n",$viaklix_result);
		foreach ($viaklix_result as $key=>$value) {
			$resultarray = explode("=",trim($value));
			$$resultarray[0] = $resultarray[1];
			$debugmsg .= "\$$resultarray[0] = $resultarray[1]\n";
		}
		if ($ssl_result == "0" && $ssl_invoice_number == $invoice && $ssl_amount == $amount) $result["RESULT"] = "success";
		else {
			if ($viaklix_result) $result["ERROR"] = $ssl_result_message;
			else $result["ERROR"] = "Communication with payment server failed!";
		}
		$result["REMOTEORDERID"] = $ssl_txn_id;
		$result["RESPONSEMSG"] = $ssl_result_message;
		return $result;
	}
}

if ( ! function_exists('parse_response') ) {
	function parse_response($gateway_input) {
		$response['invoicenum']=$gateway_input['invoice'];
		$response['email']=$gateway_input['email'];
		$response['firstname']=$gateway_input['firstname'];
		$response['lastname']=$gateway_input['lastname'];
		$response['address']=$gateway_input['address'];
		$response['zip']=$gateway_input['zip'];
		$response['city']=$gateway_input['city'];
		$response['state']=$gateway_input['state'];
		$response['country']=$gateway_input['country'];
		$response['remoteorderid']=$gateway_input['remoteorderid'];
		$response['phone']=$gateway_input['phone'];
		$response['price']=$gateway_input['amount'];
		$response['products']=$gateway_input['products'];
		$response['description']=$gateway_input['description'];
		$response['affiliate']=$gateway_input['affiliate'];
		return $response;
	}
}
?>